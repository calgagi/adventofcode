/*
 * generated by github.com/calgagi/cp_gen
 * file: B.cpp
 * time: Tue Dec  1 21:21:17 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

void solve() {
    vector<int> in;
    int x;
    while (cin >> x) {
        in.push_back(x);
    }

    set<int> before;
    before.insert(in[0]);
    int n = in.size();
    for (int i = 1; i < n; i++) {
        for (int j = i+1; j < n; j++) {
            if (before.count(2020 - in[i] - in[j])) {
                cout << in[i] * in[j] * (2020 - in[i] - in[j]) << endl;
            }
        }
        before.insert(in[i]);
    }

    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    // cin >> num_tests;
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
