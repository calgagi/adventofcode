/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Sun Dec 13 21:08:07 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

const ll bits = 36;
vector<pair<string,string>> in;
map<ll,ll> mem;

void solve() {
    string first, equals, second;
    while (cin >> first >> equals >> second) {
        in.push_back(make_pair(first, second));
    }

    string mask = "";
    for (pair<string,string>& p : in) {
        if (p.first == "mask") {
            mask = p.second;
            reverse(mask.begin(), mask.end());
        }
        else {
            p.first.pop_back(); 
            ll address = stoll(p.first.substr(4));
            ll x = stoll(p.second);
            for (int i = 0; i < bits; i++) {
                if (mask[i] == '1') {
                    x |= (1LL << i); 
                }
                else if (mask[i] == '0') {
                    x &= ~(1LL << i);
                }
            }
            mem[address] = x;
        }
    }

    ll ans = 0;
    for (pair<ll,ll> x : mem) {
        ans += x.second;
    }
    cout << ans << endl;

    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    /* cin >> num_tests; */
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
