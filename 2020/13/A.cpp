/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Sat Dec 12 21:01:42 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

string grab(const string& s, int& i) {
    string a;
    while (i < (int) s.length() && s[i] != ',') {
        a += s[i];
        i++;
    }
    return a;
}
    

void solve() {
    int early;
    vector<int> ids;
    string s;
    getline(cin, s);
    early = stoi(s);
    getline(cin, s);
    int n = s.length();
    for (int i = 0; i < n; i++) {
        string x = grab(s, i);
        if (x != "x") {
            ids.push_back(stoi(x));
        }
    }

    int ans = INT_MAX, ans_id = 0;
    for (int& id : ids) {
        int closest = (early / id) * id;
        if (closest != early) {
            closest += id;
        }
        if (ans > closest - early) {
            ans_id = id;
            ans = closest - early;
        }
    }

    cout << ans * ans_id << endl;
    
    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    /* cin >> num_tests; */
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
