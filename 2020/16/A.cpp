/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Tue Dec 15 21:03:50 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

vector<pair<string, vector<pair<int,int>>>> field;
vector<vector<int>> scanned;
vector<int> you;
int n = 0;

void solve() {
    vector<string> in;
    string line;
    while (getline(cin, line)) {
        in.push_back(line);
    }

    int mode = 0;
    for (string& s : in) {
        if (s == "") {
            mode++;
            continue;
        }
        if (mode == 0) {
            int pos = s.find(":");
            string f = s.substr(0, pos);
            pos = s.find("-");
            string num;
            int first, second;
            field.push_back(make_pair(f, vector<pair<int,int>>())); 
            int idx = field.size() - 1;

            for (int i = pos-1; i >= 0 && s[i] != ' '; i--) {
                num += s[i];
            }
            reverse(num.begin(), num.end());
            first = stoi(num);
            num = "";
            for (int i = pos+1; i < (int) s.length() && s[i] != ' '; i++) {
                num += s[i];
            }
            second = stoi(num);
            num = "";
            field[idx].second.push_back(make_pair(first, second));

            pos = s.find("-", pos+1);
            for (int i = pos-1; i >= 0 && s[i] != ' '; i--) {
                num += s[i];
            }
            reverse(num.begin(), num.end());
            first = stoi(num);
            num = "";
            for (int i = pos+1; i < (int) s.length() && s[i] != ' '; i++) {
                num += s[i];
            }
            second = stoi(num);
            num = "";
            field[idx].second.push_back(make_pair(first, second));
            cout << field[idx].first << ": ";
            for (pair<int,int>& x : field[idx].second) {
                cout << x.first << "-" << x.second << " ";
            }
            cout << endl;
        } 
        else if (mode == 1) {
            if (s == "your ticket:") continue;
            n = field.size();
            string num;
            for (int i = 0; i < (int) s.length(); i++) {
                num = "";
                while (i < (int) s.length() && s[i] != ',')
                    num += s[i++];
                you.push_back(stoi(num));
                /* cout << you.back() << endl; */
            }
        }
        else if (mode == 2) {
            if (s == "nearby tickets:") continue;
            vector<int> cur;
            string num;
            for (int i = 0; i < (int) s.length(); i++) {
                num = "";
                while (i < (int) s.length() && s[i] != ',')
                    num += s[i++];
                cur.push_back(stoi(num));
                /* cout << cur.back() << ","; */
            }
            /* cout << endl; */
            scanned.push_back(cur);
        }
    }

    // INPUT PARSED NOW
    
    ll ans = 0;
    for (vector<int>& cur : scanned) {
        for (int i = 0; i < n; i++) {
            bool ok = false;
            for (int j = 0; j < n; j++) {
                for (pair<int,int>& range : field[j].second) {
                    if (range.first <= cur[i] && range.second >= cur[i]) {
                        ok = true;
                    }
                }
            }
            if (!ok) ans += cur[i];
        }
    }
            
    cout << ans << endl;

    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    /* cin >> num_tests; */
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
