/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Fri Dec 11 20:59:27 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;


pair<ll,ll> cur = {0, 0};
pair<ll,ll> cur_wp = {1, 10};

void translate(const pair<ll,ll>& p) {
    char a = p.first;
    ll move = p.second;
    if (a == 'N') {
        cur_wp.first += move;
    } 
    else if (a == 'S') {
        cur_wp.first -= move;
    } 
    else if (a == 'E') {
        cur_wp.second += move;
    }
    else if (a == 'W') {
        cur_wp.second -= move;
    }
    else if (a == 'R') {
        int turns = move / 90;
        while (turns--) {
            swap(cur_wp.first, cur_wp.second);
            cur_wp.first *= -1;  
        }
    }
    else if (a == 'L') {
        int turns = move / 90;
        while (turns--) {
            swap(cur_wp.first, cur_wp.second);
            cur_wp.second *= -1;
        }
    }
    else if (a == 'F') {
        cur.first += cur_wp.first * move, cur.second += cur_wp.second * move;
    }

    return;
}

void solve() {
    pair<char,int> in;
    vector<pair<char,int>> go;
    while (cin >> in.first) {
        cin >> in.second;
        go.push_back(in);
    }

    for (pair<char,int>& p : go) {
        translate(p);
    }
        
    cout << cur.first << " " << cur.second << endl;
    cout << abs(cur.first) + abs(cur.second) << endl;

    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    /* cin >> num_tests; */
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
