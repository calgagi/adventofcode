/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Fri Dec 11 20:59:27 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;


pair<int,int> cur = {0, 0};
int dir = 1;

void translate(const pair<char,int>& p) {
    char a = p.first;
    int move = p.second;
    char new_dir = dir;
    if (a == 'N') {
        cur.first += move;
    } 
    else if (a == 'S') {
        cur.first -= move;
    } 
    else if (a == 'E') {
        cur.second += move;
    }
    else if (a == 'W') {
        cur.second -= move;
    }
    else if (a == 'L') {
        dir -= move / 90;
    }
    else if (a == 'R') {
        dir += move / 90;
    }
    else if (a == 'F') {
        if (dir == 0) {
            cur.first += move;
        } 
        else if (dir == 2) {
            cur.first -= move;
        } 
        else if (dir == 1) {
            cur.second += move;
        }
        else if (dir == 3) {
            cur.second -= move;
        }
    }
    dir %= 4;
    if (dir < 0) {
        dir += 4;
    }

    return;
}

void solve() {
    pair<char,int> in;
    vector<pair<char,int>> go;
    while (cin >> in.first) {
        cin >> in.second;
        go.push_back(in);
    }

    for (pair<char,int>& p : go) {
        translate(p);
    }
        
    cout << abs(cur.first) + abs(cur.second) << endl;

    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    /* cin >> num_tests; */
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
