/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Wed Dec  2 20:50:41 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

void solve() {
    vector<string> grid;
    string in;
    while (cin >> in) {
        grid.push_back(in);
    }
    
    int ans = 0;
    int n = grid.size(), m = grid[0].length();
    for (int i = 1, j = 3; i < n; j = (j + 3) % m, i++) {
        if (grid[i][j] == '#') {
            ans++;
        }
    }

    cout << ans << endl;

    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    /* cin >> num_tests; */
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
