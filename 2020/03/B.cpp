/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Wed Dec  2 20:50:41 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

void solve() {
    vector<string> grid;
    string in;
    while (cin >> in) {
        grid.push_back(in);
    }
    
    ll ans = 1;
    int n = grid.size(), m = grid[0].length();
    vector<pair<int,int>> dirs = {{1, 1}, {1, 3}, {1, 5}, {1, 7}, {2, 1}};
    for (pair<int,int>& dir : dirs) {
        int cur = 0;
        int i = dir.first, j = dir.second;
        for (; i < n; j = (j + dir.second) % m, i += dir.first) {
            if (grid[i][j] == '#') {
                cur++;
            }
        }
        cout << cur << endl;
        ans *= cur;
    }
    cout << ans << endl;

    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    /* cin >> num_tests; */
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
