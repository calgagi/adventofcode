/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Thu Dec  3 21:01:58 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

string get_item(string& s, int& i) {
    string ans = "";
    while(i < s.length() && s[i] != ':' && s[i] != ' ') {
        ans += s[i];
        i++;
    }
    return ans;
}

bool is_num(string& s) {
    for (char& c : s) {
        if (c < '0' || c > '9') {
            return false;
        }
    }
    return true;
}

void solve() {
    vector<string> input;
    string in;
    while (getline(cin, in)) {
        input.push_back(in);
    }

    vector<string> needed = {"byr", "iyr", "eyr", "hgt", "hcl", "ecl", "pid"};
    set<string> good = {"amb", "blu", "brn", "gry", "grn", "hzl", "oth"};
    map<string,string> cur;
    int ans = 0;
    for (string& line : input) {
        for (int i = 0; i < line.length(); i++) {
            if (line[i] == ' ') {
                continue;
            }
            string key = get_item(line, i);
            i++;
            string val = get_item(line, i);
            cur[key] = val;
        }
        if (line == "") {
            int num = 7;
            for (int i = 0; i < 7; i++) {
                string s = cur[needed[i]];
                switch(i) {
                    case 0:
                        if (s.length() == 4 && is_num(s)) {
                            int x = stoi(s);
                            if (x >= 1920 && x <= 2002) {
                                num--;
                            }
                        }
                        break;

                    case 1:
                        if (s.length() == 4 && is_num(s)) {
                            int x = stoi(s);
                            if (x >= 2010 && x <= 2020) {
                                num--;
                            }
                        }
                        break;

                    case 2:
                        if (s.length() == 4 && is_num(s)) {
                            int x = stoi(s);
                            if (x >= 2020 && x <= 2030) {
                                num--;
                            }
                        }
                        break;

                    case 3:
                        if (s.length() >= 2 ) {
                            string type = s.substr(s.length()-2);
                            s.pop_back();
                            s.pop_back();
                            if (type == "cm" && is_num(s)) {
                                int x = stoi(s);
                                if (x >= 150 && x <= 193) {
                                    num--;
                                }
                            }
                            else if (type == "in" && is_num(s)) {
                                int x = stoi(s);
                                if (x >= 59 && x <= 76) {
                                    num--;
                                }
                            }
                        }
                        break;

                    case 4:
                        if (s.length() == 7 && s[0] == '#') {
                            bool ok = 1;
                            for (int i = 1; i < s.length(); i++) {
                                if (!((s[i] >= '0' & s[i] <= '9') || (s[i] <= 'f' && s[i] >= 'a'))) {
                                    ok = false;
                                }
                            }
                            if (ok) num--;
                        }
                        break;

                    case 5:
                        if (good.count(s)) num--;
                        break;

                    case 6:
                        if (s.length() == 9 && is_num(s)) num--;
                        break;
                }
            }
            if (!num) ans++;
            cur.clear();
        }
    }
    cout << ans << endl;
        

    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    /* cin >> num_tests; */
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
