/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Mon Dec 14 21:02:50 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

void solve() {
    int x;
    char garb;
    vector<int> in;
    cin >> x;
    in.push_back(x);
    
    while (cin >> garb) {
        cin >> x;
        in.push_back(x);
    }

    unordered_map<ll,ll> recent, cnt;
    for (int i = 0; i < (int) in.size(); i++) {
        recent[in[i]] = i+1;
        cnt[in[i]]++;
    }

    ll mrs, spoken = in.back();
    for (int i = in.size()+1; i <= 30000000; i++) {
        mrs = spoken;
        if (cnt[mrs] == 1) {
            spoken = 0;
        }
        else {
            spoken = i - recent[mrs] - 1;
        }
        cout << mrs << " " << spoken << endl;
        cnt[spoken]++;
        recent[mrs] = i-1;
    }

    cout << spoken << endl;

    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    /* cin >> num_tests; */
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
