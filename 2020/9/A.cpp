/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Tue Dec  8 21:01:06 2020
 */

#include<bits/stdc++.h>

using namespace std;

typedef long long ll;
typedef long double ld;

void solve() {
    vector<ll> in;
    ll x;
    while (cin >> x) {
        in.push_back(x);
    }

    int n = in.size();
    ll target = 0;
    for (int i = 25; i < n; i++) {
        set<ll> seen;
        bool ok = false;
        for (int j = i-25; j < i; j++) {
            if (seen.find(in[i] - in[j]) != seen.end()) {
                ok = true;
                break;
            }
            seen.insert(in[j]);
        }
        if (!ok) {
            target = in[i];
            break;
        }
    }

    ll cur = 0;
    for (int e = 0, b = 0; e < n; e++) {
        cur += in[e];
        while (cur > target) {
            cur -= in[b];
            b++;
        }
        if (cur == target) {
            sort(in.begin()+b, in.begin()+e);
            cout << in[b] + in[e] << endl;
            break;
        }
    }


    return;
}

int main() {
    ios_base::sync_with_stdio(false);
    cin.tie(NULL);
    srand(chrono::steady_clock::now().time_since_epoch().count());

    int num_tests = 1;
    /* cin >> num_tests; */
    for (int i = 0; i < num_tests; i++) {
        solve();
    }

    return 0;
}
