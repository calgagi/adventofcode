/*
 * generated by github.com/calgagi/cp_gen
 * file: A.cpp
 * time: Fri Dec  1 11:05:13 2023
 */

#include <bits/stdc++.h>
using namespace std;
typedef long long ll;
typedef long double ld;

namespace cp {

class parser {
public:
    string input = "";
    int idx = 0, len = 0;

    parser() {
        string line;
        while (getline(cin, line)) input += (line += '\n');
        len = input.length();
    }

    parser(string filename) {
        fstream f(filename, ios_base::in);
        string line;
        if (f.is_open()) while (getline(f, line)) input += (line += '\n');
        len = input.length();
    }

    bool empty() {
        return idx >= len;
    } 

    ll get_ll() {
        string num = "";
        if (idx < len && input[idx] == '-') num += input[idx++];
        while (idx < len && input[idx] >= '0' && input[idx] <= '9') num += input[idx++];
        return stoll(num);
    }

    char get_char() {
        return (idx < len ? input[idx++] : ' ');
    }

    void ws() {
        while (idx < len && input[idx] == ' ' || input[idx] == '\n' || input[idx] == '\t') idx++;
    }

    string get_word() {
        string word = "";
        while (idx < len && ((input[idx] >= 'a' && input[idx] <= 'z') || (input[idx] >= 'A' && input[idx] <= 'Z'))) word += input[idx++];
        return word;
    }

    string get_until(char deliminator = ' ') {
        string res = "";
        while (idx < len && input[idx] != deliminator && input[idx] != '\n') res += input[idx++];
        return res;
    }
};

}

/* ===== BEGIN USER CODE ===== */

int main() {
    ios_base::sync_with_stdio(0); cin.tie(0);
    mt19937 rng(chrono::steady_clock::now().time_since_epoch().count());

    cp::parser p;
    int ans = 0;
    while (!p.empty()) {
        string s = p.get_until();
        p.ws();
        int first = -1, last = -1;
        for (int i = 0; i < (int) s.length(); i++) {
            if (s[i] <= '9' && s[i] >= '0') {
                if (first == -1) {
                    first = s[i] - '0';
                }
                last = s[i] - '0';
            }
            else {
                int v = -1;
                if (s.substr(i, 3) == "one") {
                    v = 1;
                }
                else if (s.substr(i, 3) == "two") {
                    v = 2;
                }
                else if (s.substr(i, 5) == "three") {
                    v = 3;
                }
                else if (s.substr(i, 4) == "four") {
                    v = 4;
                }
                else if (s.substr(i, 4) == "five") {
                    v = 5;
                }
                else if (s.substr(i, 3) == "six") {
                    v = 6;
                }
                else if (s.substr(i, 5) == "seven") {
                    v = 7;
                }
                else if (s.substr(i, 5) == "eight") {
                    v = 8;
                }
                else if (s.substr(i, 4) == "nine") {
                    v = 9;
                }
                if (v != -1) {
                    if (first == -1) {
                        first = v;
                    }
                    last = v;
                }
            }
        } 
        cout << first << " " << last << endl;
        ans += (first * 10) + last;
    }

    cout << ans << endl;

    return 0;
}
